import t from"vue";export default class{constructor(e){this.bus=e||new t}emit(t,...e){return this.bus.$emit(t,...e),this}on(t,e){if(t instanceof Object)Object.keys(t).forEach(e=>this.bus.$on(e,t[e]));else{if(!e)throw new Error("[VueBus] Expected callback to be a function, got undefined");this.bus.$on(t,e)}return this}off(t,e){return this.bus.$off(t,e),this}once(t,e){return this.bus.$once(t,e),this}register(t="$vuebus"){return this.attach(t)}attach(e="$vuebus"){return t.prototype[e]=this,this}}
